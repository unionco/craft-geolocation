{"version":3,"file":"SimpleMapSettings.min.js","sources":["../../resources/js/Helpers.js","../../resources/js/SimpleMapSettings.js"],"sourcesContent":["/* globals google */\n\n/**\n * Load the google API into the dom\n *\n * @param {string} key - Google Maps API key\n * @param {string} locale - The locale\n * @param {boolean=} includeDrawing - Include the drawing library\n * @static\n */\nexport const loadGoogleAPI = function (key, locale, includeDrawing = false) {\n\twindow.simpleMapsLoadingGoogle = true;\n\t\n\tconst gmjs = document.createElement(\"script\");\n\tgmjs.type = \"text/javascript\";\n\tgmjs.src = \"https://www.google.com/jsapi?key=\" + key;\n\tgmjs.onreadystatechange = function () {\n\t\tloadMapsApi(key, locale, includeDrawing);\n\t};\n\tgmjs.onload = function () {\n\t\tloadMapsApi(key, locale, includeDrawing);\n\t};\n\tdocument.body.appendChild(gmjs);\n};\n\n/**\n * Load the google maps API into the dom\n *\n * @param {string} key - Google Maps API key\n * @param {string} locale - The locale\n * @param {boolean=} includeDrawing - Include the drawing library\n * @static\n */\nexport const loadMapsApi = function (key, locale, includeDrawing = false) {\n\tgoogle.load(\"maps\", \"3\", {\n\t\tother_params: [\n\t\t\t\"libraries=places\" + (includeDrawing ? \",drawing\" : \"\"),\n\t\t\t`key=${key}`,\n\t\t\t`language=${locale.replace(\"_\", \"-\")}`,\n\t\t\t`region=${locale}`,\n\t\t].join(\"&\"),\n\t\tcallback: function () {\n\t\t\tdocument.dispatchEvent(new Event(\"SimpleMapsGAPILoaded\"));\n\t\t}\n\t});\n};","/* globals google, $ */\n\nimport { loadGoogleAPI, loadMapsApi } from \"./Helpers\";\n\nclass SimpleMapSettings {\n\t\n\t// Variables\n\t// =========================================================================\n\t\n\tnamespacedId = null;\n\tmapSettings = {\n\t\tlat: 51.272154,\n\t\tlng: 0.514951,\n\t\tzoom: 15,\n\t\theight: 400,\n\t\tboundary: {\n\t\t\tne: { lat: 0, lng: 0 },\n\t\t\tsw: { lat: 0, lng: 0 },\n\t\t}\n\t};\n\t\n\tsetup = false;\n\tinputs = null;\n\tboundaries = null;\n\t\n\tsettingsMap = null;\n\tsettingsMapEl = null;\n\tsettingsMapWrap = null;\n\t\n\tboundaryMap = null;\n\tboundaryButton = null;\n\tdrawingManager = null;\n\tboundaryRectangle = null;\n\t\n\tmouseMoveLastPos = 0;\n\tnextHeight = 0;\n\t\n\t// SimpleMapSettings\n\t// =========================================================================\n\t\n\tconstructor (key, locale, namespacedId, mapSettings) {\n\t\tthis.namespacedId = namespacedId;\n\t\tthis.mapSettings = Object.keys(mapSettings).reduce((a, b) => {\n\t\t\tconst value = mapSettings[b];\n\t\t\ta[b] = b === \"boundary\"\n\t\t\t\t? typeof value === \"string\" ? JSON.parse(value) : value\n\t\t\t\t: +value;\n\t\t\treturn a;\n\t\t}, {});\n\t\t\n\t\tthis.inputs = {\n\t\t\tlat: document.getElementById(`${this.namespacedId}lat`),\n\t\t\tlng: document.getElementById(`${this.namespacedId}lng`),\n\t\t\tzoom: document.getElementById(`${this.namespacedId}zoom`),\n\t\t\theight: document.getElementById(`${this.namespacedId}height`),\n\t\t};\n\t\t\n\t\tthis.boundaries = {\n\t\t\tneLat: document.getElementById(`${this.namespacedId}boundaryRestrictionNELat`),\n\t\t\tneLng: document.getElementById(`${this.namespacedId}boundaryRestrictionNELng`),\n\t\t\tswLat: document.getElementById(`${this.namespacedId}boundaryRestrictionSWLat`),\n\t\t\tswLng: document.getElementById(`${this.namespacedId}boundaryRestrictionSWLng`),\n\t\t};\n\t\t\n\t\tthis.boundaryButton =\n\t\t\tdocument.getElementById(`${this.namespacedId}boundaryButton`);\n\t\t\n\t\tthis.boundaryButton.addEventListener(\"click\", this.onBoundaryButtonClick);\n\t\t\n\t\t// Load Google APIs if they aren\"t already\n\t\tif (typeof google === \"undefined\") {\n\t\t\tif (!window.simpleMapsLoadingGoogle)\n\t\t\t\tloadGoogleAPI(key, locale, true);\n\t\t} else if (!google.maps || !google.maps.places) {\n\t\t\t// Load Google Maps APIs if the aren\"t already\n\t\t\tif (!window.simpleMapsLoadingGoogle)\n\t\t\t\tloadMapsApi(key, locale, true);\n\t\t} else {\n\t\t\tif (!this.setup)\n\t\t\t\tthis.setupMaps();\n\t\t}\n\t\t\n\t\tdocument.addEventListener(\"SimpleMapsGAPILoaded\", () => {\n\t\t\tif (!this.setup)\n\t\t\t\tthis.setupMaps();\n\t\t});\n\t\t\n\t\t// Re-draw the maps when the type select changes\n\t\t// (otherwise the maps will be grey)\n\t\tdocument.getElementById(\"type\").addEventListener(\"change\", e => {\n\t\t\tif (e.target.value === \"ether\\\\simplemap\\\\fields\\\\MapField\")\n\t\t\t\tthis.redrawMaps();\n\t\t});\n\t\t\n\t\t$(`#${this.namespacedId}hideMap`).on(\"change\", this.onHideMapToggle);\n\t}\n\t\n\t// Events\n\t// =========================================================================\n\t\n\t// Events: Settings Map\n\t// -------------------------------------------------------------------------\n\t\n\tonHideMapToggle = e => {\n\t\tconst shouldHide = !!e.target.getElementsByTagName(\"input\")[0].value;\n\t\t\n\t\tif (shouldHide) {\n\t\t\tconst nextMaxHeight =\n\t\t\t\tthis.settingsMapWrap.getBoundingClientRect().height + \"px\";\n\t\t\t\n\t\t\tif (nextMaxHeight !== 0)\n\t\t\t\tthis.settingsMapWrap.style.maxHeight = nextMaxHeight;\n\t\t}\n\t\t\n\t\tsetTimeout(() => {\n\t\t\tthis.settingsMapWrap\n\t\t\t\t.classList[shouldHide ? \"add\" : \"remove\"](\"hide\");\n\t\t}, 1);\n\t};\n\t\n\tonSettingsMapReposition = () => {\n\t\tthis.inputs.lng.value = this.settingsMap.center.lng();\n\t\tthis.inputs.lat.value = this.settingsMap.center.lat();\n\t};\n\t\n\tonSettingsMapZoom = () => {\n\t\tthis.inputs.zoom.value = this.settingsMap.getZoom();\n\t};\n\t\n\tonResizeMouseDown = e => {\n\t\te.preventDefault();\n\t\t\n\t\tthis.mouseMoveLastPos = e.clientY;\n\t\tthis.nextHeight = this.mapSettings.height;\n\t\t\n\t\tthis.settingsMapEl.style.pointerEvents = \"none\";\n\t\tthis.settingsMapWrap.style.maxHeight = '';\n\t\t\n\t\tdocument.addEventListener(\"mousemove\", this.onResizeMouseMove);\n\t\tdocument.addEventListener(\"mouseup\", this.onResizeMouseUp);\n\t};\n\t\n\tonResizeMouseMove = e => {\n\t\tthis.nextHeight = this.nextHeight + (e.clientY - this.mouseMoveLastPos);\n\t\tthis.mouseMoveLastPos = e.clientY;\n\t\t\n\t\tif (this.nextHeight < 250)\n\t\t\treturn;\n\t\t\n\t\trequestAnimationFrame(() => {\n\t\t\tthis.mapSettings.height = this.nextHeight;\n\t\t\tthis.inputs.height.value = this.nextHeight;\n\t\t\tthis.settingsMapEl.style.height = `${this.nextHeight}px`;\n\t\t\t\n\t\t\tconst c = this.settingsMap.getCenter();\n\t\t\t\n\t\t\tgoogle.maps.event.trigger(this.settingsMap, \"resize\");\n\t\t\tthis.settingsMap.setCenter(c);\n\t\t});\n\t};\n\t\n\tonResizeMouseUp = () => {\n\t\tthis.settingsMapEl.style.pointerEvents = \"\";\n\t\tdocument.removeEventListener(\"mousemove\", this.onResizeMouseMove);\n\t\tdocument.removeEventListener(\"mouseup\", this.onResizeMouseUp);\n\t};\n\t\n\tonBoundaryButtonClick = () => {\n\t\tif (this.boundaries.neLat.value) {\n\t\t\tthis.drawingManager.setOptions({\n\t\t\t\tdrawingMode: null,\n\t\t\t});\n\t\t\t\n\t\t\tthis.boundaryRectangle.setMap(null);\n\t\t\tthis.boundaryRectangle = null;\n\t\t\t\n\t\t\tthis.boundaries.neLat.value = \"\";\n\t\t\tthis.boundaries.neLng.value = \"\";\n\t\t\tthis.boundaries.swLat.value = \"\";\n\t\t\tthis.boundaries.swLng.value = \"\";\n\t\t\t\n\t\t\tthis.boundaryButton.textContent = \"Draw Boundaries\";\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tthis.drawingManager.setOptions({\n\t\t\tdrawingMode: google.maps.drawing.OverlayType.RECTANGLE,\n\t\t});\n\t\tthis.drawingManager.setMap(this.boundaryMap);\n\t\tthis.boundaryButton.textContent = \"Clear Boundaries\";\n\t};\n\t\n\tonDrawingComplete = rectangle => {\n\t\tthis.boundaryRectangle = rectangle;\n\t\tthis.hookBoundaryRectangleEvents();\n\t\t\n\t\tthis.storeNextBounds(rectangle.getBounds());\n\t\t\n\t\tthis.drawingManager.setOptions({\n\t\t\tdrawingMode: null,\n\t\t});\n\t};\n\t\n\tonRectangleEdit = () => {\n\t\tthis.storeNextBounds(this.boundaryRectangle.getBounds());\n\t};\n\t\n\t// Actions\n\t// =========================================================================\n\t\n\tsetupMaps () {\n\t\t\n\t\tthis.setup = true;\n\t\t\n\t\t// Settings Map\n\t\t// ---------------------------------------------------------------------\n\t\t\n\t\tthis.settingsMapEl =\n\t\t\tdocument.getElementById(`${this.namespacedId}settingsMap`);\n\t\tthis.settingsMapWrap =\n\t\t\tdocument.getElementById(`${this.namespacedId}settingsMapWrap`);\n\t\t\n\t\tthis.settingsMap = new google.maps.Map(this.settingsMapEl, {\n\t\t\tzoom: this.mapSettings.zoom,\n\t\t\tcenter: new google.maps.LatLng(\n\t\t\t\tthis.mapSettings.lat,\n\t\t\t\tthis.mapSettings.lng\n\t\t\t),\n\t\t\tscrollwheel: false,\n\t\t\tfullscreenControl: false,\n\t\t\tmapTypeControl: false,\n\t\t\tstreetViewControl: false,\n\t\t\trotateControl: false,\n\t\t\tmapTypeId: google.maps.MapTypeId.ROADMAP,\n\t\t});\n\t\t\n\t\tgoogle.maps.event.addListener(\n\t\t\tthis.settingsMap,\n\t\t\t'dragend',\n\t\t\tthis.onSettingsMapReposition\n\t\t);\n\t\t\n\t\tgoogle.maps.event.addListener(\n\t\t\tthis.settingsMap,\n\t\t\t'zoom_changed',\n\t\t\tthis.onSettingsMapZoom\n\t\t);\n\t\t\n\t\t// Resizer\n\t\tdocument.getElementById(`${this.namespacedId}settingsMapHeight`)\n\t\t        .addEventListener(\"mousedown\", this.onResizeMouseDown);\n\t\t\n\t\t// Boundary Map\n\t\t// ---------------------------------------------------------------------\n\t\t\n\t\tconst boundaryMapEl =\n\t\t\tdocument.getElementById(`${this.namespacedId}boundaryMap`);\n\t\t\n\t\tthis.drawingManager = new google.maps.drawing.DrawingManager({\n\t\t\tdrawingMode: null,\n\t\t\tdrawingControl: false,\n\t\t\trectangleOptions: {\n\t\t\t\t// clickable: true,\n\t\t\t\teditable: true,\n\t\t\t}\n\t\t});\n\t\t\n\t\tgoogle.maps.event.addListener(\n\t\t\tthis.drawingManager,\n\t\t\t\"rectanglecomplete\",\n\t\t\tthis.onDrawingComplete\n\t\t);\n\t\t\n\t\tthis.boundaryMap = new google.maps.Map(boundaryMapEl, {\n\t\t\tzoom: this.mapSettings.zoom,\n\t\t\tcenter: new google.maps.LatLng(\n\t\t\t\tthis.mapSettings.lat,\n\t\t\t\tthis.mapSettings.lng\n\t\t\t),\n\t\t\tscrollwheel: false,\n\t\t\tfullscreenControl: false,\n\t\t\tmapTypeControl: false,\n\t\t\tstreetViewControl: false,\n\t\t\trotateControl: false,\n\t\t\tmapTypeId: google.maps.MapTypeId.ROADMAP,\n\t\t});\n\t\t\n\t\tif (this.boundaries.neLat.value) {\n\t\t\tthis.boundaryRectangle = new google.maps.Rectangle({\n\t\t\t\tbounds: {\n\t\t\t\t\tnorth: +this.mapSettings.boundary.ne.lat,\n\t\t\t\t\teast: +this.mapSettings.boundary.ne.lng,\n\t\t\t\t\tsouth: +this.mapSettings.boundary.sw.lat,\n\t\t\t\t\twest: +this.mapSettings.boundary.sw.lng,\n\t\t\t\t},\n\t\t\t\tmap: this.boundaryMap,\n\t\t\t\teditable: true,\n\t\t\t});\n\t\t\t\n\t\t\tthis.boundaryMap.fitBounds(this.boundaryRectangle.getBounds());\n\t\t\t\n\t\t\tthis.hookBoundaryRectangleEvents();\n\t\t}\n\t\t\n\t}\n\t\n\thookBoundaryRectangleEvents () {\n\t\tgoogle.maps.event.addListener(\n\t\t\tthis.boundaryRectangle/*.getPath()*/,\n\t\t\t\"bounds_changed\",\n\t\t\tthis.onRectangleEdit\n\t\t);\n\t}\n\t\n\tstoreNextBounds (bounds) {\n\t\tconst ne = bounds.getNorthEast()\n\t\t\t, sw = bounds.getSouthWest();\n\t\t\n\t\tthis.boundaries.neLat.value = ne.lat();\n\t\tthis.boundaries.neLng.value = ne.lng();\n\t\tthis.boundaries.swLat.value = sw.lat();\n\t\tthis.boundaries.swLng.value = sw.lng();\n\t}\n\t\n\tredrawMaps () {\n\t\tconst xa = this.settingsMap.getZoom()\n\t\t\t, ca = this.settingsMap.getCenter()\n\t\t\t, xb = this.boundaryMap.getZoom()\n\t\t\t, cb = this.boundaryMap.getCenter();\n\t\t\n\t\tsetTimeout(() => {\n\t\t\tgoogle.maps.event.trigger(this.settingsMap, 'resize');\n\t\t\tthis.settingsMap.setZoom(xa);\n\t\t\tthis.settingsMap.setCenter(ca);\n\t\t\t\n\t\t\tgoogle.maps.event.trigger(this.boundaryMap, 'resize');\n\t\t\tthis.boundaryMap.setZoom(xb);\n\t\t\tthis.boundaryMap.setCenter(cb);\n\t\t}, 1);\n\t}\n\t\n}\n\nwindow.SimpleMapSettings = SimpleMapSettings;"],"names":["loadGoogleAPI","key","locale","includeDrawing","simpleMapsLoadingGoogle","gmjs","document","createElement","type","src","onreadystatechange","onload","body","appendChild","loadMapsApi","load","replace","join","dispatchEvent","Event","SimpleMapSettings","namespacedId","mapSettings","lat","lng","setup","inputs","boundaries","settingsMap","settingsMapEl","settingsMapWrap","boundaryMap","boundaryButton","drawingManager","boundaryRectangle","mouseMoveLastPos","nextHeight","onHideMapToggle","shouldHide","e","target","getElementsByTagName","value","nextMaxHeight","_this","getBoundingClientRect","height","style","maxHeight","classList","onSettingsMapReposition","center","onSettingsMapZoom","zoom","getZoom","onResizeMouseDown","preventDefault","clientY","pointerEvents","addEventListener","onResizeMouseMove","onResizeMouseUp","c","getCenter","maps","event","trigger","setCenter","removeEventListener","onBoundaryButtonClick","neLat","setOptions","setMap","neLng","swLat","swLng","textContent","google","drawing","OverlayType","RECTANGLE","onDrawingComplete","rectangle","hookBoundaryRectangleEvents","storeNextBounds","getBounds","onRectangleEdit","Object","keys","reduce","a","b","JSON","parse","getElementById","this","window","places","setupMaps","redrawMaps","on","Map","LatLng","MapTypeId","ROADMAP","addListener","boundaryMapEl","DrawingManager","Rectangle","boundary","ne","sw","fitBounds","bounds","getNorthEast","getSouthWest","xa","ca","xb","cb","_this2","setZoom"],"mappings":"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"}